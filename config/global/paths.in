# Options related to paths and install

comment "Paths"

config LOCAL_TARBALLS_DIR
    string
    prompt "Local tarballs directory"
    default ""
    help
      If you have previously downloaded the tarballs, enter the PATH where
      you stored them here.

config SAVE_TARBALLS
    bool
    prompt "Save new tarballs"
    default n
    depends on LOCAL_TARBALLS_DIR != ""
    help
      If you say 'y' here, new downloaded tarballs will be saved in the
      directory you entered above.

config WORK_DIR
    string
    prompt "Working directory"
    default "${CT_TOP_DIR}/targets"
    help
      Set this to the directory where all build actions will be done.
      
      The default is "${CT_TOP_DIR}/targets", and leaving this option
      empty will also use the default.
      
      You should not need to change that, except in one very peculiar
      setup:
       - your crosstool-NG source directory is on the network
       - you configured crosstool-NG with --local
      This kind of setup is a pain, as any action involving source file
      access would have to go through the wire. In this case, you should
      set CT_WORK_DIR to point to a path local to your machine, to avoid
      any network overhead.
      
      Do *NOT* change it if you don't know better.

config PREFIX_DIR
    string
    prompt "Prefix directory"
    default "${HOME}/x-tools/${CT_TARGET}"
    help
      This is the path the toolchain will run from.

config INSTALL_DIR
    string
#    prompt "Install directory"
    default "${CT_PREFIX_DIR}"
#    help
#      This is the path the toolchain will be installed into.
#      
#      Normally, you would set this to ${CT_PREFIX_DIR}, but if for some reasons
#      you can't write there, you can install somewhere else and have a third
#      person do the install for you.
#      The reason you might also want to install elsewhere is if you are going
#      to package your shinny new toolchain for distribution.

choice
    prompt "Patches origin"
    bool
    default PATCH_BUNDLED

config PATCH_BUNDLED
    bool
    prompt "Bundled only"
    help
      Only apply patches bundled with crosstool-NG.

config PATCH_LOCAL
    bool
    prompt "Local only"
    select PATCH_USE_LOCAL
    help
      Only apply your local patches.

config PATCH_BUNDLED_LOCAL
    bool
    prompt "Bundled, then local"
    select PATCH_USE_LOCAL
    help
      Apply the patches bundled with crosstool-NG,
      then apply your local patches.

config PATCH_LOCAL_BUNDLED
    bool
    prompt "Local, then bundled"
    select PATCH_USE_LOCAL
    help
      Apply your local patches, then apply the patches
      bundled with crosstool-NG.

config PATCH_BUNDLED_FALLBACK_LOCAL
    bool
    prompt "Bundled only, local if no bundled"
    select PATCH_USE_LOCAL
    select PATCH_SINGLE
    help
      Apply the patches bundled with crosstool-NG;
      if there's no bundled patches, apply your local patches.

config PATCH_LOCAL_FALLBACK_BUNDLED
    bool
    prompt "Local only, bundled if no local"
    select PATCH_USE_LOCAL
    select PATCH_SINGLE
    help
      Only apply your local patches;
      if there's no local patches, apply patches bundled with crosstool-NG.

endchoice

config PATCH_ORDER
    string
    default "bundled"           if PATCH_BUNDLED
    default "local"             if PATCH_LOCAL
    default "bundled,local"     if PATCH_BUNDLED_LOCAL
    default "local,bundled"     if PATCH_LOCAL_BUNDLED

config PATCH_SINGLE
    bool
    default n

config PATCH_USE_LOCAL
    bool
    default n

config LOCAL_PATCH_DIR
    string
    prompt "|  Local patch directory"
    default ""
    depends on PATCH_USE_LOCAL
    help
      Enter the custom patch directory here.
      
      Note that you must ensure that the directory contianing your custom
      patches is arranged the same way the official directory is.

config REMOVE_DOCS
    bool
    prompt "Remove documentation"
    default y
    help
      Remove the installed documentation (man and info pages).
      Gains around 8MiB for a uClibc-based, C and C++ compiler.

config INSTALL_DIR_RO
    bool
    prompt "Render the toolchain read-only"
    default y
    help
      Render the directory of the toolchain (and its sub-directories)
      read-only.
      
      Usefull for toolchains destined for production.
