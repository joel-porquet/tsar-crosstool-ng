# Menu for the cross GDB

config GDB_CROSS
    bool
    prompt "Cross-gdb"
    default y
    select GDB_GDBSERVER if ! BARE_METAL
    help
      Build and install a cross-gdb for the target, to run on host.

if GDB_CROSS

config GDB_CROSS_USE_GMP_MPFR
    bool
    prompt "Use GMP/MPFR"
    default n
    select GMP
    select MPFR
    help
      gdb can use GMP+MPFR, although it does not seem compulsory.
      
      Say 'Y' here if you want to use GMP+MPFR.

config GDB_CROSS_USE_MPC
    bool
    prompt "Use MPC"
    default n
    select GDB_CROSS_USE_GMP_MPFR
    select MPC
    help
      gdb can use MPC, although it does not seem compulsory.
      
      Say 'Y' here if you want to use MPC.

config GDB_CROSS_STATIC
    bool
    prompt "Build a static cross gdb"
    default n
    help
      A static cross gdb can be usefull if you debug on a machine that is
      not the one that is used to compile the toolchain.
      
      That way, you can share the cross-gdb without installing a toolchain
      on every machine that will be used to debug target programs.

config GDB_CROSS_INSIGHT
    bool
    prompt "Use Insight instead (EXPERIMENTAL)"
    default n
    depends on EXPERIMENTAL
    help
      If you say 'Y' here, then Insight will be used to build the cross
      debugger, instead of the plain gdb.
      
      Insight is gdb plus a TCL/TK GUI: http://sourceware.org/insight/

endif # GDB_CROSS
