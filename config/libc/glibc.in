# glibc options

choice
    bool
    prompt "glibc version"

config LIBC_V_LATEST
    bool
    prompt "'latest' snapshot (EXPERIMENTAL)"
    depends on EXPERIMENTAL

config LIBC_V_date
    bool
    prompt "<specific date> (EXPERIMENTAL)"
    depends on EXPERIMENTAL

config LIBC_V_2_3_6
    bool
    prompt "2.3.6 (OBSOLETE)"
    depends on OBSOLETE

config LIBC_V_2_5
    bool
    prompt "2.5"

config LIBC_V_2_5_1
    bool
    prompt "2.5.1"

config LIBC_V_2_6
    bool
    prompt "2.6"

config LIBC_V_2_6_1
    bool
    prompt "2.6.1"

config LIBC_V_2_7
    bool
    prompt "2.7"
    depends on EXPERIMENTAL

# CT_INSERT_VERSION_ABOVE
# Don't remove above line!
endchoice

config LIBC_VERSION
    string
    prompt "Enter date (YYYYMMDD)" if LIBC_V_date
    default "latest" if LIBC_V_LATEST
    default "2.3.6" if LIBC_V_2_3_6
    default "2.4" if LIBC_V_2_4
    default "2.5" if LIBC_V_2_5
    default "2.5.1" if LIBC_V_2_5_1
    default "2.6" if LIBC_V_2_6
    default "2.6.1" if LIBC_V_2_6_1
    default "2.7" if LIBC_V_2_7
# CT_INSERT_VERSION_STRING_ABOVE
# Don't remove above line!

# Please note: This is not used for now (no sh support).
config LIBC_GLIBC_CONFIGPARMS
    string
#    prompt "Extra config params (READ HELP)"
    default "" if ARCH != "sh3" && ARCH != "sh4"
    default "no-z-defs=yes" if ARCH = "sh3" || ARCH = "sh4"
    help
      Some architectures need to set options in the file configparms.
      This is the case for sh3/4, which really need to set configparms as of
      gcc-3.4/glibc-2.3.2.

      Unless you are building a toolchain for sh3/4, you should leave that empty.

      Note: this is awkward, doesn't work well if you need more than one
            line in configparms

source config/libc/glibc-eglibc-common.in
